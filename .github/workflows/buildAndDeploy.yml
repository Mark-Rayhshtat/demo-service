name: Deploy to Amazon EKS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: ecr-lab-demo

jobs:
  buildAndDeploy:
    name: Build and Deploy
    runs-on:
      - codebuild-github-runners-lab-${{ github.run_id }}-${{ github.run_attempt }}
    environment: lab

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{env.SHORT_SHA}}
        run: |
          # Build a docker container and push it to ECR
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Install Kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/
          kustomize version

      - name: Update Kustomization with new image tag
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{env.SHORT_SHA}}
        run: |
          pwd
          ls -la
          cd ./k8s
          kustomize edit set image $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          cat kustomization.yaml

      - name: Generate kubeconfig
        run: |
          {
              echo 'EKS_CREDS<<EOF'
              aws eks update-kubeconfig --region us-east-2 --name my-cluster --dry-run | base64
              echo EOF
          } >> $GITHUB_ENV

      - uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ env.EKS_CREDS }}
      - run: kubectl apply -k demo/k8s/
